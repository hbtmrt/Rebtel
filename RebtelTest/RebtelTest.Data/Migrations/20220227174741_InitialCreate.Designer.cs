// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RebtelTest.Data;

namespace RebtelTest.Data.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20220227174741_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RebtelTest.Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "My Book 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "My Book 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "My Book 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "My Book 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "My Book 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "My Book 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "My Book 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "My Book 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "My Book 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "My Book 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "My Book 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "My Book 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "My Book 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "My Book 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "My Book 15"
                        },
                        new
                        {
                            Id = 16,
                            Name = "My Book 16"
                        },
                        new
                        {
                            Id = 17,
                            Name = "My Book 17"
                        },
                        new
                        {
                            Id = 18,
                            Name = "My Book 18"
                        },
                        new
                        {
                            Id = 19,
                            Name = "My Book 19"
                        });
                });

            modelBuilder.Entity("RebtelTest.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "My Book 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "My Book 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "My Book 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "My Book 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "My Book 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "My Book 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "My Book 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "My Book 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "My Book 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "My Book 10"
                        },
                        new
                        {
                            Id = 11,
                            Name = "My Book 11"
                        },
                        new
                        {
                            Id = 12,
                            Name = "My Book 12"
                        },
                        new
                        {
                            Id = 13,
                            Name = "My Book 13"
                        },
                        new
                        {
                            Id = 14,
                            Name = "My Book 14"
                        },
                        new
                        {
                            Id = 15,
                            Name = "My Book 15"
                        },
                        new
                        {
                            Id = 16,
                            Name = "My Book 16"
                        },
                        new
                        {
                            Id = 17,
                            Name = "My Book 17"
                        },
                        new
                        {
                            Id = 18,
                            Name = "My Book 18"
                        },
                        new
                        {
                            Id = 19,
                            Name = "My Book 19"
                        });
                });

            modelBuilder.Entity("RebtelTest.Data.Models.UserBorrowedBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCopy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBorrowedBook");
                });

            modelBuilder.Entity("RebtelTest.Data.Models.UserBorrowedBook", b =>
                {
                    b.HasOne("RebtelTest.Data.Models.Book", null)
                        .WithMany("UserBorrowedBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RebtelTest.Data.Models.User", null)
                        .WithMany("UserBorrowedBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RebtelTest.Data.Models.Book", b =>
                {
                    b.Navigation("UserBorrowedBooks");
                });

            modelBuilder.Entity("RebtelTest.Data.Models.User", b =>
                {
                    b.Navigation("UserBorrowedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
